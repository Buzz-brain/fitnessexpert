import { motion } from 'framer-motion';
import { 
  Download, 
  RefreshCw, 
  Home,
  Share2,
  Star, 
  Clock, 
  Target, 
  Flame,
  Calendar,
  Trophy,
  Heart
} from 'lucide-react';
import { WorkoutPlan } from '../types';
import ExerciseCard from './ExerciseCard';
import jsPDF from 'jspdf';

interface WorkoutResultsProps {
  workoutPlan: WorkoutPlan;
  onReset: () => void;
  onBackToHome: () => void;
}

const WorkoutResults = ({ workoutPlan, onReset, onBackToHome }: WorkoutResultsProps) => {
  const downloadPDF = () => {
    const pdf = new jsPDF();
    
    // Title
    pdf.setFontSize(24);
    pdf.setFont('helvetica', 'bold');
    pdf.text(workoutPlan.title, 20, 30);
    
    // Description
    pdf.setFontSize(12);
    pdf.setFont('helvetica', 'normal');
    const splitDescription = pdf.splitTextToSize(workoutPlan.description, 170);
    pdf.text(splitDescription, 20, 50);
    
    // Workout Details
    pdf.setFontSize(14);
    pdf.setFont('helvetica', 'bold');
    pdf.text('Workout Details:', 20, 80);
    
    pdf.setFont('helvetica', 'normal');
    pdf.text(`Frequency: ${workoutPlan.frequency}`, 20, 95);
    pdf.text(`Duration: ${workoutPlan.duration}`, 20, 105);
    pdf.text(`Estimated Calories: ${workoutPlan.caloriesBurned}`, 20, 115);
    
    // Exercises
    pdf.setFont('helvetica', 'bold');
    pdf.text('Exercises:', 20, 135);
    
    let yPos = 150;
    workoutPlan.exercises.forEach((exercise, index) => {
      if (yPos > 250) {
        pdf.addPage();
        yPos = 30;
      }
      
      pdf.setFont('helvetica', 'bold');
      pdf.text(`${index + 1}. ${exercise.name}`, 20, yPos);
      
      pdf.setFont('helvetica', 'normal');
      const exerciseDetails = `${exercise.type} - ${exercise.duration}${exercise.sets ? ` - ${exercise.sets}` : ''}${exercise.reps ? ` - ${exercise.reps}` : ''}`;
      pdf.text(exerciseDetails, 25, yPos + 10);
      
      const splitDesc = pdf.splitTextToSize(exercise.description, 160);
      pdf.text(splitDesc, 25, yPos + 20);
      
      yPos += 40 + (splitDesc.length * 5);
    });
    
    // Tips
    if (yPos > 220) {
      pdf.addPage();
      yPos = 30;
    }
    
    pdf.setFont('helvetica', 'bold');
    pdf.text('Fitness Tips:', 20, yPos);
    
    yPos += 15;
    pdf.setFont('helvetica', 'normal');
    workoutPlan.tips.forEach((tip, index) => {
      if (yPos > 260) {
        pdf.addPage();
        yPos = 30;
      }
      const splitTip = pdf.splitTextToSize(`â€¢ ${tip}`, 170);
      pdf.text(splitTip, 20, yPos);
      yPos += splitTip.length * 7 + 5;
    });
    
    // Motivational Quote
    if (yPos > 240) {
      pdf.addPage();
      yPos = 30;
    }
    
    pdf.setFont('helvetica', 'bold');
    pdf.text('Motivation:', 20, yPos);
    
    pdf.setFont('helvetica', 'italic');
    const splitQuote = pdf.splitTextToSize(`"${workoutPlan.motivationalQuote}"`, 170);
    pdf.text(splitQuote, 20, yPos + 15);
    
    pdf.save(`${workoutPlan.title.replace(/\s+/g, '_')}.pdf`);
  };

  const shareWorkoutPlan = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: workoutPlan.title,
          text: `Check out my personalized workout plan: ${workoutPlan.description}`,
          url: window.location.href,
        });
      } catch (error) {
        console.log('Error sharing:', error);
      }
    } else {
      // Fallback: copy to clipboard
      const shareText = `Check out my personalized workout plan: ${workoutPlan.title}\n\n${workoutPlan.description}\n\nGenerated by FitExpert AI`;
      navigator.clipboard.writeText(shareText);
      alert('Workout plan copied to clipboard!');
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-gray-900 p-4">
      <div className="max-w-7xl mx-auto">
        {/* Back to Home Button */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="mb-6"
        >
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={onBackToHome}
            className="flex items-center space-x-2 px-6 py-3 bg-gray-800/50 hover:bg-gray-700/50 text-gray-300 hover:text-white rounded-xl transition-all duration-300 backdrop-blur-sm border border-gray-700"
          >
            <Home className="w-5 h-5" />
            <span>Back to Home</span>
          </motion.button>
        </motion.div>

        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-12"
        >
          <motion.div
            initial={{ scale: 0 }}
            animate={{ scale: 1 }}
            transition={{ delay: 0.2, type: "spring", stiffness: 200 }}
            className="inline-flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full text-white font-semibold mb-6"
          >
            <Trophy className="w-5 h-5" />
            <span>Your Personalized Plan is Ready!</span>
          </motion.div>
          
          <h1 className="text-5xl font-bold text-white mb-4">
            {workoutPlan.title}
          </h1>
          
          <p className="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
            {workoutPlan.description}
          </p>
        </motion.div>

        {/* Workout Overview Cards */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 }}
          className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-12"
        >
          <div className="bg-gradient-to-r from-cyan-500 to-blue-500 rounded-2xl p-6 text-white">
            <Calendar className="w-8 h-8 mb-3" />
            <div className="text-2xl font-bold mb-1">{workoutPlan.frequency}</div>
            <div className="text-sm opacity-90">Frequency</div>
          </div>
          
          <div className="bg-gradient-to-r from-green-500 to-emerald-500 rounded-2xl p-6 text-white">
            <Clock className="w-8 h-8 mb-3" />
            <div className="text-2xl font-bold mb-1">{workoutPlan.duration}</div>
            <div className="text-sm opacity-90">Per Session</div>
          </div>
          
          <div className="bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl p-6 text-white">
            <Flame className="w-8 h-8 mb-3" />
            <div className="text-2xl font-bold mb-1">{workoutPlan.caloriesBurned}</div>
            <div className="text-sm opacity-90">Calories Burned</div>
          </div>
          
          <div className="bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl p-6 text-white">
            <Target className="w-8 h-8 mb-3" />
            <div className="text-2xl font-bold mb-1">{workoutPlan.exercises.length}</div>
            <div className="text-sm opacity-90">Exercises</div>
          </div>
        </motion.div>

        {/* Action Buttons */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4 }}
          className="flex flex-col sm:flex-row gap-4 justify-center mb-12"
        >
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={downloadPDF}
            className="flex items-center space-x-2 px-8 py-4 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300"
          >
            <Download className="w-5 h-5" />
            <span>Download as PDF</span>
          </motion.button>
          
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={shareWorkoutPlan}
            className="flex items-center space-x-2 px-8 py-4 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300"
          >
            <Share2 className="w-5 h-5" />
            <span>Share My Plan</span>
          </motion.button>
          
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={onReset}
            className="flex items-center space-x-2 px-8 py-4 bg-gray-700 hover:bg-gray-600 text-white rounded-xl font-semibold shadow-lg transition-all duration-300"
          >
            <RefreshCw className="w-5 h-5" />
            <span>Create New Plan</span>
          </motion.button>
        </motion.div>

        {/* Exercises Grid */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.5 }}
          className="mb-12"
        >
          <h2 className="text-3xl font-bold text-white mb-8 text-center">Your Exercises</h2>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {workoutPlan.exercises.map((exercise, index) => (
              <ExerciseCard key={exercise.id} exercise={exercise} index={index} />
            ))}
          </div>
        </motion.div>

        {/* Tips and Motivation Section */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">
          {/* Fitness Tips */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.6 }}
            className="bg-gradient-to-br from-gray-800 to-gray-900 rounded-2xl p-8 border border-gray-700"
          >
            <div className="flex items-center space-x-3 mb-6">
              <Target className="w-8 h-8 text-cyan-400" />
              <h3 className="text-2xl font-bold text-white">Fitness Tips</h3>
            </div>
            <ul className="space-y-4">
              {workoutPlan.tips.map((tip, index) => (
                <motion.li
                  key={index}
                  initial={{ opacity: 0, x: -10 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.7 + index * 0.1 }}
                  className="flex items-start space-x-3"
                >
                  <Star className="w-5 h-5 text-yellow-400 flex-shrink-0 mt-0.5" />
                  <span className="text-gray-300 leading-relaxed">{tip}</span>
                </motion.li>
              ))}
            </ul>
          </motion.div>

          {/* Motivational Quote */}
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.7 }}
            className="bg-gradient-to-br from-purple-900 to-pink-900 rounded-2xl p-8 border border-purple-700 relative overflow-hidden"
          >
            <div className="absolute inset-0 bg-gradient-to-r from-purple-500/20 to-pink-500/20" />
            <div className="relative z-10">
              <div className="flex items-center space-x-3 mb-6">
                <Heart className="w-8 h-8 text-pink-400" />
                <h3 className="text-2xl font-bold text-white">Daily Motivation</h3>
              </div>
              
              <blockquote className="text-xl text-gray-100 italic leading-relaxed mb-4">
                "{workoutPlan.motivationalQuote}"
              </blockquote>
              
              <div className="flex items-center justify-center mt-8">
                <motion.div
                  animate={{ scale: [1, 1.1, 1] }}
                  transition={{ duration: 2, repeat: Infinity }}
                  className="p-4 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full"
                >
                  <Trophy className="w-8 h-8 text-white" />
                </motion.div>
              </div>
              
              <p className="text-center text-gray-300 mt-4 font-medium">
                You've got this! ðŸ’ª
              </p>
            </div>
          </motion.div>
        </div>

        {/* Footer Call to Action */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.8 }}
          className="text-center bg-gradient-to-r from-gray-800 to-gray-900 rounded-2xl p-8 border border-gray-700"
        >
          <h3 className="text-2xl font-bold text-white mb-4">Ready to Start Your Fitness Journey?</h3>
          <p className="text-gray-300 mb-6 max-w-2xl mx-auto">
            Your personalized workout plan is designed specifically for your goals and preferences. 
            Remember to start slowly and listen to your body as you progress.
          </p>
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={onBackToHome}
            className="inline-flex items-center space-x-2 px-8 py-4 bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-300"
          >
            <Home className="w-5 h-5" />
            <span>Back to Home</span>
          </motion.button>
        </motion.div>
      </div>
    </div>
  );
};

export default WorkoutResults;